{"version":3,"sources":["ProductList.js","AddProduct.js","App.js","index.js"],"names":["ProductList","props","state","error","products","response","url","options","method","headers","body","JSON","stringify","table","fetch","this","then","res","json","result","setState","productId","data","where","field","value","filter","product","id","message","Alert","variant","Table","map","key","productName","sku","price","Button","onClick","editProduct","deleteProduct","React","Component","AddProduct","initialState","handleChange","bind","handleSubmit","event","name","target","preventDefault","onFormSubmit","pageTitle","Row","Col","sm","Form","onSubmit","Group","controlId","Label","Control","type","onChange","placeholder","App","isEditProduct","isAddProduct","apiUrl","filterData","productForm","className","Container","style","textAlign","onCreate","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bc494b0.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Table, Button, Alert } from 'react-bootstrap';\n\nclass ProductList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            products: [],\n            response: {},\n            url: 'http://localhost:1300/api/'\n        }\n    }\n\n    componentDidMount() {\n        var data = {\n            table: 'products'\n        };\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)   \n        };\n        fetch(this.state.url + 'select-all', options)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        products: result\n                    });\n                },\n                (error) => {\n                    this.setState({ error });\n                }\n            )\n    }\n\n    deleteProduct(productId) {\n        const { products } = this.state;\n        var data = {\n            table: 'products',\n            where: {\n                field: 'id = ?',\n                value: [productId]\n            }\n        };\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        };\n        fetch(this.state.url + 'delete', options)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        response: result,\n                        products: products.filter(product => product.id !== productId)\n                    });\n                },\n                (error) => {\n                    this.setState({ error });\n                }\n            )\n    }\n\n    render() {\n        const { error, products } = this.state;\n\n        if (error) {\n            return (\n                <div>Error: {error.message}</div>\n            )\n        } else {\n            return (\n                <div>\n                    <h2>Product List</h2>\n                    {this.state.response.message && <Alert variant=\"info\">{this.state.response.message}</Alert>}\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>#ID</th>\n                                <th>Product Name</th>\n                                <th>SKU</th>\n                                <th>Price</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map(product => (\n                                <tr key={product.id}>\n                                    <td>{product.id}</td>\n                                    <td>{product.productName}</td>\n                                    <td>{product.sku}</td>\n                                    <td>{product.price}</td>\n                                    <td>\n                                        <Button variant=\"info\" onClick={() => this.props.editProduct(product.id)}>Edit</Button>\n                                        &nbsp;<Button variant=\"danger\" onClick={() => this.deleteProduct(product.id)}>Delete</Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </div>\n            )\n        }\n    }\n}\n\nexport default ProductList;\n","\nimport React from 'react';\nimport { Row, Form, Col, Button } from 'react-bootstrap';\n\nclass AddProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.initialState = {\n            id: '',\n            productName: '',\n            price: '',\n            sku: ''\n        }\n\n        if (props.product) {\n            this.state = props.product\n        } else {\n            this.state = this.initialState;\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.onFormSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render() {\n\n        let pageTitle;\n        if (this.state.id) {\n            pageTitle = <h2>Edit Product</h2>\n        } else {\n            pageTitle = <h2>Add Product</h2>\n        }\n\n        return (\n            <div>\n                {pageTitle}\n                <Row>\n                    <Col sm={6}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group controlId=\"productName\">\n                                <Form.Label>Product Name</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"productName\"\n                                    value={this.state.productName}\n                                    onChange={this.handleChange}\n                                    placeholder=\"Product Name\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"sku\">\n                                <Form.Label>SKU</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"sku\"\n                                    value={this.state.sku}\n                                    onChange={this.handleChange}\n                                    placeholder=\"SKU\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"price\">\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"price\"\n                                    value={this.state.price}\n                                    onChange={this.handleChange}\n                                    placeholder=\"Price\" />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Control type=\"hidden\" name=\"id\" value={this.state.id} />\n                                <Button variant=\"success\" type=\"submit\">Save</Button>\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default AddProduct;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Container, Button, Alert } from 'react-bootstrap';\nimport ProductList from './ProductList';\nimport AddProduct from './AddProduct';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAddProduct: false,\n            error: null,\n            response: {},\n            product: {},\n            isEditProduct: false,\n            url: 'http://localhost:1300/api/'\n        }\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n\n    onCreate() {\n        this.setState({ isAddProduct: true });\n    }\n\n    onFormSubmit(data) {\n        let apiUrl;\n\n        var filterData = {\n            table: 'products'\n        };\n\n        if (this.state.isEditProduct) {\n            apiUrl = 'update';\n            filterData.data = \"productName = '\" + data.productName + \"', price = '\" + data.price + \"', sku = '\" + data.sku +\"'\";\n            filterData.where = {\n                field: \"id = ?\", \n                value: [data.id]\n            };\n            \n        } else {\n            apiUrl = 'add';\n             filterData.data = {\n                field: 'productName, price, sku',\n                value: [[data.productName, data.price, data.sku]]\n            };\n        }\n\n       \n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(filterData)\n        };\n        fetch(this.state.url + apiUrl, options)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    response: result,\n                    isAddProduct: false,\n                    isEditProduct: false\n                })\n            },\n                (error) => {\n                    this.setState({ error });\n                }\n            )\n    }\n\n    editProduct = productId => {\n        var data = {\n            table: 'products',\n            where: {\n                field: 'id = ?',\n                value: [productId]\n            }\n        };\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        };\n\n        fetch(this.state.url + 'select-one', options)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        product: result,\n                        isEditProduct: true,\n                        isAddProduct: true\n                    });\n                },\n                (error) => {\n                    this.setState({ error });\n                }\n            )\n    }\n\n    render() {\n\n        let productForm;\n        if (this.state.isAddProduct || this.state.isEditProduct) {\n            productForm = <AddProduct onFormSubmit={this.onFormSubmit} product={this.state.product} />\n        }\n\n        return (\n            <div className=\"App\">\n                <Container>\n                    <h1 style={{ textAlign: 'center' }}>React Tutorial</h1>\n                    {!this.state.isAddProduct && <Button variant=\"primary\" onClick={() => this.onCreate()}>Add Product</Button>}\n                    {this.state.response.status === 'success' && <div><br /><Alert variant=\"info\">{this.state.response.message}</Alert></div>}\n                    {!this.state.isAddProduct && <ProductList editProduct={this.editProduct} />}\n                    {productForm}\n                    {this.state.error && <div>Error: {this.state.error.message}</div>}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}