{"ast":null,"code":"var _jsxFileName = \"/Users/geethav/Desktop/React/react-node/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Container, Button, Alert } from 'react-bootstrap';\nimport ProductList from './ProductList';\nimport AddProduct from './AddProduct';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editProduct = productId => {\n      var data = {\n        table: 'products',\n        where: {\n          field: 'id = ?',\n          value: [productId]\n        }\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(this.state.url + 'select-one', options).then(res => res.json()).then(result => {\n        this.setState({\n          product: result,\n          isEditProduct: true,\n          isAddProduct: true\n        });\n      }, error => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.state = {\n      isAddProduct: false,\n      error: null,\n      response: {},\n      product: {},\n      isEditProduct: false,\n      url: 'http://localhost:1300/api/'\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onCreate() {\n    this.setState({\n      isAddProduct: true\n    });\n  }\n\n  onFormSubmit(data) {\n    let apiUrl;\n    var filterData = {\n      table: 'products'\n    };\n\n    if (this.state.isEditProduct) {\n      apiUrl = 'update';\n      filterData.data = \"productName = '\" + data.productName + \"' price = '\" + data.price + \"' sku = '\" + data.sku + \"'\";\n      filterData.where = {\n        field: 'id = ?',\n        value: [data.id]\n      };\n    } else {\n      apiUrl = 'add';\n      filterData.data = {\n        field: 'productName, price, sku',\n        value: [[data.productName, data.price, data.sku]]\n      };\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(filterData)\n    };\n    fetch(this.state.url + apiUrl, options).then(res => res.json()).then(result => {\n      this.setState({\n        response: result,\n        isAddProduct: false,\n        isEditProduct: false\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    let productForm;\n\n    if (this.state.isAddProduct || this.state.isEditProduct) {\n      productForm = React.createElement(AddProduct, {\n        onFormSubmit: this.onFormSubmit,\n        product: this.state.product,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"React Tutorial\"), !this.state.isAddProduct && React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.onCreate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Add Product\"), this.state.response.status === 'success' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Alert, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.response.message)), !this.state.isAddProduct && React.createElement(ProductList, {\n      editProduct: this.editProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), productForm, this.state.error && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Error: \", this.state.error.message)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/geethav/Desktop/React/react-node/src/App.js"],"names":["React","Component","Container","Button","Alert","ProductList","AddProduct","App","constructor","props","editProduct","productId","data","table","where","field","value","options","method","headers","body","JSON","stringify","fetch","state","url","then","res","json","result","setState","product","isEditProduct","isAddProduct","error","response","onFormSubmit","bind","onCreate","apiUrl","filterData","productName","price","sku","id","render","productForm","textAlign","status","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Container, Button, Alert } from 'react-bootstrap';\nimport ProductList from './ProductList';\nimport AddProduct from './AddProduct';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAddProduct: false,\n            error: null,\n            response: {},\n            product: {},\n            isEditProduct: false,\n            url: 'http://localhost:1300/api/'\n        }\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n\n    onCreate() {\n        this.setState({ isAddProduct: true });\n    }\n\n    onFormSubmit(data) {\n        let apiUrl;\n\n        var filterData = {\n            table: 'products'\n        };\n\n        if (this.state.isEditProduct) {\n            apiUrl = 'update';\n            filterData.data = \"productName = '\" + data.productName + \"' price = '\" + data.price + \"' sku = '\" + data.sku +\"'\";\n            filterData.where = {\n                field: 'id = ?', \n                value: [data.id]\n            };\n            \n        } else {\n            apiUrl = 'add';\n             filterData.data = {\n                field: 'productName, price, sku',\n                value: [[data.productName, data.price, data.sku]]\n            };\n        }\n\n       \n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(filterData)\n        };\n        fetch(this.state.url + apiUrl, options)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    response: result,\n                    isAddProduct: false,\n                    isEditProduct: false\n                })\n            },\n                (error) => {\n                    this.setState({ error });\n                }\n            )\n    }\n\n    editProduct = productId => {\n        var data = {\n            table: 'products',\n            where: {\n                field: 'id = ?',\n                value: [productId]\n            }\n        };\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        };\n\n        fetch(this.state.url + 'select-one', options)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        product: result,\n                        isEditProduct: true,\n                        isAddProduct: true\n                    });\n                },\n                (error) => {\n                    this.setState({ error });\n                }\n            )\n    }\n\n    render() {\n\n        let productForm;\n        if (this.state.isAddProduct || this.state.isEditProduct) {\n            productForm = <AddProduct onFormSubmit={this.onFormSubmit} product={this.state.product} />\n        }\n\n        return (\n            <div className=\"App\">\n                <Container>\n                    <h1 style={{ textAlign: 'center' }}>React Tutorial</h1>\n                    {!this.state.isAddProduct && <Button variant=\"primary\" onClick={() => this.onCreate()}>Add Product</Button>}\n                    {this.state.response.status === 'success' && <div><br /><Alert variant=\"info\">{this.state.response.message}</Alert></div>}\n                    {!this.state.isAddProduct && <ProductList editProduct={this.editProduct} />}\n                    {productForm}\n                    {this.state.error && <div>Error: {this.state.error.message}</div>}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}