{"ast":null,"code":"var _jsxFileName = \"/Users/geethav/Desktop/React/react-node/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Container, Button, Alert } from 'react-bootstrap';\nimport ProductList from './ProductList';\nimport AddProduct from './AddProduct';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editProduct = productId => {\n      const apiUrl = 'http://localhost:1300/api/select-one';\n      var data = {\n        table: 'products',\n        where: {\n          field: 'id = ?',\n          value: [productId]\n        }\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(apiUrl, options).then(res => res.json()).then(result => {\n        console.log(result);\n        this.setState({\n          product: result,\n          isEditProduct: true,\n          isAddProduct: true\n        });\n      }, error => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.state = {\n      isAddProduct: false,\n      error: null,\n      response: {},\n      product: {},\n      isEditProduct: false\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onCreate() {\n    this.setState({\n      isAddProduct: true\n    });\n  }\n\n  onFormSubmit(data) {\n    let apiUrl;\n\n    if (this.state.isEditProduct) {\n      apiUrl = 'http://localhost/reactAPI/reactapi/editProduct';\n    } else {\n      apiUrl = 'http://localhost/reactAPI/reactapi/createProduct';\n    }\n\n    const myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/json');\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      myHeaders\n    };\n    fetch(apiUrl, options).then(res => res.json()).then(result => {\n      this.setState({\n        response: result,\n        isAddProduct: false,\n        isEditProduct: false\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    let productForm;\n\n    if (this.state.isAddProduct || this.state.isEditProduct) {\n      productForm = React.createElement(AddProduct, {\n        onFormSubmit: this.onFormSubmit,\n        product: this.state.product,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"React Tutorial\"), !this.state.isAddProduct && React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.onCreate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Add Product\"), this.state.response.status === 'success' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Alert, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.response.message)), !this.state.isAddProduct && React.createElement(ProductList, {\n      editProduct: this.editProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), productForm, this.state.error && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Error: \", this.state.error.message)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/geethav/Desktop/React/react-node/src/App.js"],"names":["React","Component","Container","Button","Alert","ProductList","AddProduct","App","constructor","props","editProduct","productId","apiUrl","data","table","where","field","value","options","method","headers","body","JSON","stringify","fetch","then","res","json","result","console","log","setState","product","isEditProduct","isAddProduct","error","state","response","onFormSubmit","bind","onCreate","myHeaders","Headers","append","render","productForm","textAlign","status","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Container, Button, Alert } from 'react-bootstrap';\nimport ProductList from './ProductList';\nimport AddProduct from './AddProduct';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAddProduct: false,\n            error: null,\n            response: {},\n            product: {},\n            isEditProduct: false\n        }\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n\n    onCreate() {\n        this.setState({ isAddProduct: true });\n    }\n\n    onFormSubmit(data) {\n        let apiUrl;\n\n        if (this.state.isEditProduct) {\n            apiUrl = 'http://localhost/reactAPI/reactapi/editProduct';\n        } else {\n            apiUrl = 'http://localhost/reactAPI/reactapi/createProduct';\n        }\n\n        const myHeaders = new Headers();\n        myHeaders.append('Content-Type', 'application/json');\n\n        const options = {\n            method: 'POST',\n            body: JSON.stringify(data),\n            myHeaders\n        };\n\n        fetch(apiUrl, options)\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    response: result,\n                    isAddProduct: false,\n                    isEditProduct: false\n                })\n            },\n                (error) => {\n                    this.setState({ error });\n                }\n            )\n    }\n\n    editProduct = productId => {\n\n        const apiUrl = 'http://localhost:1300/api/select-one';\n        var data = {\n            table: 'products',\n            where: {\n                field: 'id = ?',\n                value: [productId]\n            }\n        };\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        };\n\n        fetch(apiUrl, options)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    this.setState({\n                        product: result,\n                        isEditProduct: true,\n                        isAddProduct: true\n                    });\n                },\n                (error) => {\n                    this.setState({ error });\n                }\n            )\n    }\n\n    render() {\n\n        let productForm;\n        if (this.state.isAddProduct || this.state.isEditProduct) {\n            productForm = <AddProduct onFormSubmit={this.onFormSubmit} product={this.state.product} />\n        }\n\n        return (\n            <div className=\"App\">\n                <Container>\n                    <h1 style={{ textAlign: 'center' }}>React Tutorial</h1>\n                    {!this.state.isAddProduct && <Button variant=\"primary\" onClick={() => this.onCreate()}>Add Product</Button>}\n                    {this.state.response.status === 'success' && <div><br /><Alert variant=\"info\">{this.state.response.message}</Alert></div>}\n                    {!this.state.isAddProduct && <ProductList editProduct={this.editProduct} />}\n                    {productForm}\n                    {this.state.error && <div>Error: {this.state.error.message}</div>}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}